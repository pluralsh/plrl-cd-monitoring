fullnameOverride: monitoring 

prometheusOperator:
  tls:
    enabled: false
  admissionWebhooks:
    enabled: false
additionalScrapeConfigs:
  - job_name: opencost
    honor_labels: true
    scrape_interval: 1m
    scrape_timeout: 10s
    metrics_path: /metrics
    scheme: http
    dns_sd_configs:
    - names:
      - opencost.monitoring
      type: 'A'
      port: 9003
grafana:
  enabled: true
  admin:
    password: admin # placeholder will get overwritten
    user: admin
  service:
    type: ClusterIP
  ingress:
    enabled: true
    path: /.*
    annotations:
      kubernetes.io/tls-acme: "true"
      kubernetes.io/ingress.class: "nginx"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/use-regex: "true"
    hosts:
    - grafana.boot-aws.onplural.sh
    tls:
    - hosts:
      - grafana.boot-aws.onplural.sh
      secretName: grafana-tls
  sidecar:
    dashboards:
      provider:
        name: sidecar
        allowUiUpdates: true
        foldersFromFilesStructure: true
      enabled: true
      searchNamespace: ALL
      folderAnnotation: k8s-sidecar-target-directory
    datasources:
      enabled: true
      searchNamespace: ALL
    plugins:
      enabled: false
      searchNamespace: ALL
prometheus:
  ingress:
    enabled: true
    ingressClassName: nginx
    annotations:
      kubernetes.io/tls-acme: "true"
      cert-manager.io/cluster-issuer: letsencrypt-prod
      nginx.ingress.kubernetes.io/force-ssl-redirect: 'true'
      nginx.ingress.kubernetes.io/auth-type: basic
      nginx.ingress.kubernetes.io/auth-secret: basic-auth
      nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required'
    hosts:
      - prometheus.boot-aws.onplural.sh
    tls:
      - secretName: prometheus-tls
        hosts:
          - prometheus.boot-aws.onplural.sh
    servicePort: 9090

    paths:
      - path: /
        pathType: Prefix
